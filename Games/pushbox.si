//A pushbox game which has 100 levels
/*推箱子游戏 v1.0
根据C语言源代码改编成Silk语言
原C语言参考地址：https://blog.csdn.net/qq_15072163/article/details/100601665，感谢原作者。
*/

#include "../include/file.si"
#include "pushbox_map.si" 
map=null;
height=11;
width=9;
index=0;

func get_curdir()
{
	return _fun("curdir");
}
//=====>以下函数涉及Windows内部函数，通过调用C/C++语言编写的Dll实现
func getchar()
{
	ret=null;
 	curdir=get_curdir();
    filename=curdir+"SilkCommonLib64.dll";
	if(_fun("os_platform").find("x64")<0)
		filename=curdir+"SilkCommonLib.dll";//win32
	lib=_loadlib(filename);
	if(lib)
    {
		ret=_calllib(lib,"get_char");
        if(ret)
        {
			if(ret[0]==224)//如果是方向键，先返回224，然后再取真正的键值
				ret=_calllib(lib,"get_char");
			ret=ret[0];
        }
    }
	_freelib(lib);
	return ret;
}
func gotoxy(x, y){

 	curdir=get_curdir();
    filename=curdir+"SilkCommonLib64.dll";
	if(_fun("os_platform").find("x64")<0)
		filename=curdir+"SilkCommonLib.dll";//win32
	lib=_loadlib(filename);
	if(lib)
    {
		_calllib(lib,"set_console_pos",x,y);
        _calllib(lib,"hide_console_cursor");
	}
	_freelib(lib);
}
//<=====

func drawMap()
{	
	gotoxy(0,0);
	for(i=0;i<height;i++)
	{
	   for(j=0;j<width;j++)
	   {
			if(map[i][j]==0)
				printf("  "); //空白
			else if(map[i][j]==1)
				printf("■"); //墙 
			else if(map[i][j]==2)
				printf("♀"); //人 
			else if(map[i][j]==3)
				printf("☆"); //箱子 
			else if(map[i][j]==4)
				printf("◎"); //终点地方 
			else if(map[i][j]==6)
				printf("♂");//人加终点位置 
			else if(map[i][j]==7) 
				printf("★") ;//箱子加终点位置
		}
		printf("\n");
	}
	printf("推箱子游戏, 第%d关\n",index+1);
	printf("按Esc键重新开始\n");
	printf("                                       \n");
	printf("                                       \n");
    	   
}
 
func moveBox()
{
	row=0;
    col=0;
	for(i=0;i<height;i++){
		for(j=0;j<width;j++)
		{
			if(map[i][j]==2||map[i][j]==6)
			{
				row=i;
				col=j;
			}
		}	   
	}

	key=getchar();
	//上 
	if(key==72)
	{
		if(map[row-1][col]==0||map[row-1][col]==4)
		{
			map[row][col]-=2;
			map[row-1][col]+=2;
		} 
		else if(map[row-1][col]==3||map[row-1][col]==7)
		{
			if(map[row-2][col]==0||map[row-2][col]==4)
			{
			  map[row][col]-=2;
			  map[row-1][col]-=1;
			  map[row-2][col]+=3;
			}
		}
	}
	//下 
	if(key==80)
	{
		if(map[row+1][col]==0||map[row+1][col]==4)
		{
			map[row][col]-=2;
			map[row+1][col]+=2;
		}
		else if(map[row+2][col]==0||map[row+2][col]==4)
		{
			if(map[row+1][col]==3||map[row+1][col]==7)
			{
			  map[row][col]-=2;
			  map[row+1][col]-=1;
			  map[row+2][col]+=3;
			}
		}
	}
	//左 
	if(key==75)
	{
		if(map[row][col-1]==0||map[row][col-1]==4)
		{
			map[row][col]-=2;
			map[row][col-1]+=2;
		}
		else if(map[row][col-2]==0||map[row][col-2]==4)
		{
			if(map[row][col-1]==3||map[row][col-1]==7)
			{
			  map[row][col]-=2;
			  map[row][col-1]-=1;
			  map[row][col-2]+=3;
			}
		}
	}
	//右 
	if(key==77)
	{
		if(map[row][col+1]==0||map[row][col+1]==4)
		{
			map[row][col]-=2;
			map[row][col+1]+=2;
		}
		else if(map[row][col+2]==0||map[row][col+2]==4)
		{
			if(map[row][col+1]==3||map[row][col+1]==7)
			{
			  map[row][col]-=2;
			  map[row][col+1]-=1;
			  map[row][col+2]+=3;
            }
		}
	}
	//Esc 
	if(key==27)
	{
		return false;
	}
    
    return true;
} 

func isWin() 
{
	k = 0;
	for(i=0;i<height;i++)
	{
		for (j=0;j<width;j++)
		{
			 if(map[i][j]==3)
			     k++;
		}
	}
	if(k==0)
        return true;
    
    return false;
}
func readLevel()
{
	level=0;
	file=CFile();
    ret=file.Open(get_curdir()+"pushbox.dat","r");
    if(ret)
    {
		s=file.ReadAll();
        n=_int(s);
        if(n>=0&&n<100)
			level=n;
    }
    file.Close();
    return level;
}
func writeLevel()
{
	file=CFile();
    ret=file.Open(get_curdir()+"pushbox.dat","wb");
    if(ret)
    {
		file.Write(sprintf("%d",index));
    }
    file.Close();
}

main()
{
	maps=map_data();
    index=readLevel();
	while(1)
    {
		if(!map)
        {
			 map=_copy(maps[index]);
			 height=map.size();
			 width=map[0].size();
        }
         
         drawMap();
         if(isWin())
         {
			gotoxy(0,height+2);
			printf("恭喜你通过此关！\n");
			printf("按回车继续下一关，输入exit回车退出游戏\n");
            s=_input();
            if(s=="exit\n")
				break;
            index++;
            map=null;
            writeLevel();
		 }
         else
         {
			 if(!moveBox())
				 map=null;
         }
    }
    printf("游戏结束\n");
 } 
