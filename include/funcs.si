
abc=10;

func Fibon1(n)
{
	if (n == 1 || n == 2)
	{
		return 1;
	}
	else
	{
		return Fibon1(n-1)+Fibon1(n-2);
	}
}

func c1()
{
	print("");
	for(i=1;i<5;i=i+1) { // 以下为三重循环
		for(j=1;j<5;j=j+1) {
			for (k=1;k<5;k=k+1) { // 确保i、j、k三位互不相同
				if (i!=k&&i!=j&&j!=k) { 
					print(i,j,k);
				}
			}
		}
	}
}	

func c2()
{
	print("");
	for (i=1;i<10;i++)
	{
		for(j=1;j<=i;j++)
		{
			result=i*j;
			print(i,"x",j,"=",result); 
		}
		print(""); 
	}
}	

func c3()
{
	i=120000;
	print("your profit: ",i);
	bonus1=100000*0.1;
	bonus2=bonus1+100000*0.075;
	bonus4=bonus2+200000*0.05;
	bonus6=bonus4+200000*0.03;
	bonus10=bonus6+400000*0.015;
	if(i<=100000) {
		bonus=i*0.1;
	} else if(i<=200000) {
		bonus=bonus1+(i-100000)*0.075;
	} else if(i<=400000) {
		bonus=bonus2+(i-200000)*0.05;
	} else if(i<=600000) {
		bonus=bonus4+(i-400000)*0.03;
	} else if(i<=1000000) {
		bonus=bonus6+(i-600000)*0.015;
	} else if(i>1000000) {
		bonus=bonus10+(i-1000000)*0.01;
	}
	print("earn: ",bonus);
}

func c4()//判断101到200之间的素数。
{
	count=0;
	
	for (i=101; i<=200; i++) 
	{
		for (j=2; j<i; j++) 
		{
		// 如果j能被i整出在跳出循环
			if (i%j==0) 
				break;
		}
	// 判断循环是否提前跳出，如果j<i说明在2~j之间,i有可整出的数
		if (j>=i) 
		{
			count++;
			print(i," ");
		// 换行，用count计数，每五个数换行
			if (count % 5 == 0) 
				print("");
		}
	}    
	return 0;
}
func c5(n)//将一个正整数分解质因数
{
	print(n,"=");
	for(i=2;i<=n;i++)
	{
		while(n%i==0)
		{
			print(i);
			n=n/i;
			if(n!=1) print("*");
		}
	}
}	
func c6(a,b)//输入两个正整数m和n，求其最大公约数和最小公倍数
{
	if(a<b)
	{t=b;b=a;a=t;}
	r=a%b;
	n=a*b;
	while(r!=0)
	{
		a=b;
		b=r;
		r=a%b;
	}
	print("greatest common divisor:",b,", least common multiple:",n/b);
}
//一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？
func c7 ()
{
    for (i = 1; i < 168 / 2 + 1; i++)
    {
        if (168 % i == 0)
        {
            j = 168 / i;
            if ( i > j && (i + j) % 2 == 0 && (i - j) % 2 == 0)
            {
                m = (i + j) / 2;
                n = (i - j) / 2;
                x = n * n - 100;
                print (x," + 100 = ", n, " * ", n);
                print (x," + 268 = ",m," * ", m);
            }
        }
    }
}
func c8()//sort
{
	N=7;
    a = [N];
	a[0]= 23;
	a[1]= 2;
	a[2]= 3;
	a[3]= 68;
	a[4]= 20;
	a[5]= 13;
	a[6]= 32;
	
    for(i=0;i<N-1;i++)
    {
        min=i;
        for(j=i+1;j<N;j++)
            if(a[min]>a[j]) min=j;
        if(min!=i)
        {
            temp=a[min];
            a[min]=a[i];
            a[i]=temp;
        }
    }
  
	print("");
    for(i=0;i<N;i++)
        print(a[i]);
	print("");	
}
func c9(a)
{
    //a[11]={1,4,6,9,13,16,19,28,40,100};
    print("原始数组是:");
    for(i=0;i<10;i++)
        print(a[i]);
    print("插入一个新的数字: ");
    number=10;
    end=a[9];
    if(number>end)
        a[10]=number;
    else
    {
        for(i=0;i<10;i++)
        {
            if(a[i]>number)
            {
                temp1=a[i];
                a[i]=number;
                for(j=i+1;j<11;j++)
                {
                    temp2=a[j];
                    a[j]=temp1;
                    temp1=temp2;
                }
                break;
            }
        }
    }
    for(i=0;i<11;i++)
        print(a[i]);
    print("");
}

//海滩上有一堆桃子，五只猴子来分。第一只猴子把这堆桃子平均分为五份，多了一个，
//这只 猴子把多的一个扔入海中，拿走了一份。第二只猴子把剩下的桃子又平均分成五份，
//又多了 一个，它同样把多的一个扔入海中，拿走了一份，第三、第四、第五只猴子都是这样做的，
// 问海滩上原来最少有多少个桃子？
func c10()
{
    i=0;
	j=1;
    while(i<5){
        x=4*j;
        for(i=0;i<5;i++)
        {
            if(x%4!=0){break;}
            x=(x/4)*5+1;
        }
        j++;
    }
    print(x);
    
    return 0;
}

func Swap(arr, low, high)
{
    temp = arr[low];
    arr[low] = arr[high];
    arr[high] = temp;
}
 
func Partition(arr, low, high)
{
    base = arr[low];
    while(low < high)
    {
        while(low < high && arr[high] >= base)
        {
            high --;
        }
        Swap(arr, low, high);
        while(low < high && arr[low] <= base)
        {
            low ++;
        }
        Swap(arr, low, high);
    }
    return low;
}
 
func QuickSort(arr, low, high)
{
    if(low < high)
    {
        base = Partition(arr, low, high);
        QuickSort(arr, low, base - 1);
        QuickSort(arr, base + 1, high);
    }
}
func c11()
{
	N=1000;
    a=[256];
    for(i=2;i<=N;i++)
    {
        a[0]=1;
		sum=1;
        k=0;
        for(j=2;j<=(i/2);j++)
        {
            if(i%j==0)
            {
                sum=sum+j;
				k++;
                a[k]=j;
            }
           
        }
        if(i==sum)
        {
            print(i,"=",a[0]);
            for(n=1;n<=k;n++)
                print("+",a[n]);
            print("");
        }
       
    }
}
func c12()
{
	N=3;
	sum=0;
	b1=[];
    b2=[];
    b3=[];
	b1.resize(N);
    b2.resize(N);
    b3.resize(N);
    a=[b1,b2,b3];
	x=1;
	for(i=0;i<N;i++)
        for(j=0;j<N;j++)
		{
           a[i][j]=x;
		   x++;
		   print(i,j,a[i][j]);
		}  
    for(i=0;i<N;i++)
        sum=sum+a[i][i];
    print("对角线之和为：",sum);
    return 0;
}
func arraytest()
{
	//N*N array
	N=3;
	y1=[];
	y1.resize(N);
	for(i=0;i<N;i++)
	{
		y1[i]=[];
		y1[i].resize(N);
	}
	//N*N*N array
	y2=[];
	y2.resize(N);
	for(i=0;i<N;i++)
	{
		y2[i]=[];
		y2[i].resize(N);
		for(j=0;j<N;j++)
		{
			y2[i][j]=[];
			y2[i][j].resize(N);
		}
	}

	for(i=0;i<N;i++)
	for(j=0;j<N;j++)
	for(k=0;k<N;k++)
		y2[i][j][k]=(i+1)*(j+1)*(k+1);

	for(i=0;i<N;i++)
	for(j=0;j<N;j++)
	for(k=0;k<N;k++)
		print(y2[i][j][k]);

}

func PI()
{
	pi=1.0;
	n=1.0;

	for(j=1;j<=1000000;j++){
		if(j%2==0){
			pi=pi*(n/(n+1));
		}else{
			pi=pi*((n+1)/n);
		}
		n++;
	}
	pi=2*pi;
	printf("pi=%.7f\n",pi);

}

func exec()
{
  	c1();
	c4();
	c5(90);
	c6(12,26);
	c7();
	c8();
}